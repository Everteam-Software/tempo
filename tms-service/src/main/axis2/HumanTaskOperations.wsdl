<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
	xmlns="http://www.intalio.com/WS-HT/api/wsdl" xmlns:htd="http://www.intalio.com/WS-HT"
	xmlns:htda="http://www.intalio.com/WS-HT/api" xmlns:htdt="http://www.intalio.com/WS-HT/api/xsd"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.intalio.com/WS-HT/api/wsdl"
	targetNamespace="http://www.intalio.com/WS-HT/api/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
	<wsdl:types>
		<!--
			<xsd:schema> <xsd:import namespace="http://www.example.org/WS-HT"
			schemaLocation="ws-humantask.xsd" /> <xsd:import
			namespace="http://www.example.org/WS-HT/api"
			schemaLocation="ws-humantask-api.xsd" /> <xsd:import
			namespace="http://www.example.org/WS-HT/api/xsd"
			schemaLocation="ws-humantask-api-wsdl.xsd" /> </xsd:schema>
		-->

		<!--  modify by jackie -->
		<xsd:schema xmlns="http://www.intalio.com/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.intalio.com/WS-HT" elementFormDefault="qualified"
			blockDefault="#all">
			
			<xsd:import namespace="http://www.w3.org/XML/1998/namespace"
				schemaLocation="xml.xsd" />
			
			<!-- base types for extensible elements -->
			<xsd:complexType name="tExtensibleElements">
				<xsd:sequence>
					<xsd:element name="documentation" type="tDocumentation"
						minOccurs="0" maxOccurs="unbounded" />
					<xsd:any namespace="##other" processContents="lax"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:anyAttribute namespace="##other"
					processContents="lax" />
			</xsd:complexType>
			<xsd:complexType name="tDocumentation" mixed="true">
				<xsd:sequence>
					<xsd:any namespace="##other" processContents="lax"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:attribute ref="xml:lang" />
			</xsd:complexType>
			<xsd:complexType name="tExtensibleMixedContentElements"
				mixed="true">
				<xsd:sequence>
					<xsd:element name="documentation" type="tDocumentation"
						minOccurs="0" maxOccurs="unbounded" />
					<xsd:any namespace="##other" processContents="skip"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:anyAttribute namespace="##other"
					processContents="lax" />
			</xsd:complexType>
			<!-- human task definition -->
			<xsd:element name="humanInteractions" type="tHumanInteractions" />
			<xsd:complexType name="tHumanInteractions">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="extensions" type="tExtensions"
								minOccurs="0" />
							<xsd:element name="import" type="tImport" minOccurs="0"
								maxOccurs="unbounded" />
							<xsd:element ref="logicalPeopleGroups" minOccurs="0" />
							<xsd:element ref="tasks" minOccurs="0" />
							<xsd:element ref="notifications" minOccurs="0" />
						</xsd:sequence>
						<xsd:attribute name="targetNamespace" type="xsd:anyURI"
							use="required" />
						<xsd:attribute name="queryLanguage" type="xsd:anyURI" />
						<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tExtensions">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="extension" type="tExtension"
								maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tExtension">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:attribute name="namespace" type="xsd:anyURI"
							use="required" />
						<xsd:attribute name="mustUnderstand" type="tBoolean"
							use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name="import" type="tImport" />
			<xsd:complexType name="tImport">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:attribute name="namespace" type="xsd:anyURI"
							use="optional" />
						<xsd:attribute name="location" type="xsd:anyURI"
							use="optional" />
						<xsd:attribute name="importType" type="xsd:anyURI"
							use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name="logicalPeopleGroups" type="tLogicalPeopleGroups" />
			<xsd:complexType name="tLogicalPeopleGroups">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="logicalPeopleGroup" type="tLogicalPeopleGroup"
								maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tLogicalPeopleGroup">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="parameter" type="tParameter"
								minOccurs="0" maxOccurs="unbounded" />
						</xsd:sequence>
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
						<xsd:attribute name="reference" type="xsd:NCName"
							use="optional" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- generic human roles used in tasks and notifications -->
			<xsd:group name="genericHumanRole">
				<xsd:choice>
					<xsd:element ref="potentialOwners" />
					<xsd:element ref="excludedOwners" />
					<xsd:element ref="taskInitiator" />
					<xsd:element ref="taskStakeholders" />
					<xsd:element ref="businessAdministrators" />
					<xsd:element ref="recipients" />
				</xsd:choice>
			</xsd:group>
			<xsd:element name="potentialOwners" type="tGenericHumanRole" />
			<xsd:element name="excludedOwners" type="tGenericHumanRole" />
			<xsd:element name="taskInitiator" type="tGenericHumanRole" />
			<xsd:element name="taskStakeholders" type="tGenericHumanRole" />
			<xsd:element name="businessAdministrators" type="tGenericHumanRole" />
			<xsd:element name="recipients" type="tGenericHumanRole" />
			<xsd:complexType name="tGenericHumanRole">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="from" type="tFrom" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- elements and types for organizational entities -->
			<xsd:element name="organizationalEntity" type="tOrganizationalEntity" />
			<xsd:complexType name="tOrganizationalEntity">
				<xsd:choice>
					<xsd:element ref="users" />
					<xsd:element ref="groups" />
				</xsd:choice>
			</xsd:complexType>
			<xsd:element name="user" type="tUser" />
			<xsd:simpleType name="tUser">
				<xsd:restriction base="xsd:string" />
			</xsd:simpleType>
			<xsd:element name="users" type="tUserlist" />
			<xsd:complexType name="tUserlist">
				<xsd:sequence>
					<xsd:element ref="user" minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="group" type="tGroup" />
			<xsd:simpleType name="tGroup">
				<xsd:restriction base="xsd:string" />
			</xsd:simpleType>
			<xsd:element name="groups" type="tGrouplist" />
			<xsd:complexType name="tGrouplist">
				<xsd:sequence>
					<xsd:element ref="group" minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
			</xsd:complexType>
			<!-- human tasks -->
			<xsd:element name="tasks" type="tTasks" />
			<xsd:complexType name="tTasks">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element ref="task" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name="task" type="tTask" />
			<xsd:complexType name="tTask">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="interface" type="tTaskInterface" />
							<xsd:element ref="priority" minOccurs="0" />
							<xsd:element ref="peopleAssignments" />
							<xsd:element name="delegation" type="tDelegation"
								minOccurs="0" />
							<xsd:element name="presentationElements" type="tPresentationElements" />
							<xsd:element name="outcome" type="tQuery" minOccurs="0" />
							<xsd:element name="searchBy" type="tExpression"
								minOccurs="0" />
							<xsd:element name="renderings" type="tRenderings"
								minOccurs="0" />
							<xsd:element name="deadlines" type="tDeadlines"
								minOccurs="0" />
						</xsd:sequence>
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name="priority" type="tPriority" />
			<xsd:complexType name="tTaskInterface">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:attribute name="portType" type="xsd:QName" use="required" />
						<xsd:attribute name="operation" type="xsd:NCName"
							use="required" />
						<xsd:attribute name="responsePortType" type="xsd:QName"
							use="optional" />
						<xsd:attribute name="responseOperation" type="xsd:NCName"
							use="optional" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- presentation elements -->
			<xsd:complexType name="tPresentationElements">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="name" type="tText" minOccurs="0"
								maxOccurs="unbounded" />
							<xsd:element name="presentationParameters" type="tPresentationParameters"
								minOccurs="0" />
							<xsd:element name="subject" type="tText" minOccurs="0"
								maxOccurs="unbounded" />
							<xsd:element name="description" type="tDescription"
								minOccurs="0" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tPresentationParameters">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="presentationParameter" type="tPresentationParameter"
								maxOccurs="unbounded" />
						</xsd:sequence>
						<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tPresentationParameter">
				<xsd:complexContent>
					<xsd:extension base="tParameter" />
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tRenderings">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="rendering" type="tRendering"
								maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- elements for rendering tasks -->
			<xsd:complexType name="tRendering">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:attribute name="type" type="xsd:QName" use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- elements for people assignment -->
			<xsd:element name="peopleAssignments" type="tPeopleAssignments" />
			<xsd:complexType name="tPeopleAssignments">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:group ref="genericHumanRole" minOccurs="0"
								maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- elements for handling timeouts and escalation -->
			<xsd:complexType name="tDeadlines">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="startDeadline" type="tDeadline"
								minOccurs="0" maxOccurs="unbounded" />
							<xsd:element name="completionDeadline" type="tDeadline"
								minOccurs="0" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tDeadline">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="for" type="tDuration-expr" />
								<xsd:element name="until" type="tDeadline-expr" />
							</xsd:choice>
							<xsd:element name="escalation" type="tEscalation"
								minOccurs="0" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tEscalation">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="condition" type="tBoolean-expr"
								minOccurs="0" />
							<xsd:element name="toParts" type="tToParts"
								minOccurs="0" maxOccurs="unbounded" />
							<xsd:choice>
								<xsd:element ref="notification" />
								<xsd:element name="localNotification" type="tLocalNotification" />
								<xsd:element name="reassignment" type="tReassignment" />
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tLocalNotification">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:choice>
							<xsd:sequence>
								<xsd:element ref="priority" minOccurs="0" />
								<xsd:element ref="peopleAssignments" minOccurs="0" />
							</xsd:sequence>
						</xsd:choice>
						<xsd:attribute name="reference" type="xsd:QName"
							use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tReassignment">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element ref="potentialOwners" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tToParts">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="toPart" type="tToPart" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tToPart" mixed="true">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
						<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- task delegation -->
			<xsd:complexType name="tDelegation">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="from" type="tFrom" minOccurs="0" />
						</xsd:sequence>
						<xsd:attribute name="potentialDelegatees" type="tPotentialDelegatees"
							use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:simpleType name="tPotentialDelegatees">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="anybody" />
					<xsd:enumeration value="nobody" />
					<xsd:enumeration value="potentialOwners" />
					<xsd:enumeration value="other" />
				</xsd:restriction>
			</xsd:simpleType>
			<!-- notifications -->
			<xsd:element name="notifications" type="tNotifications" />
			<xsd:complexType name="tNotifications">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element ref="notification" maxOccurs="unbounded" />
						</xsd:sequence>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:element name="notification" type="tNotification" />
			<xsd:complexType name="tNotification">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:sequence>
							<xsd:element name="interface" type="tNotificationInterface" />
							<xsd:element ref="priority" minOccurs="0" />
							<xsd:element ref="peopleAssignments" />
							<xsd:element name="presentationElements" type="tPresentationElements" />
							<xsd:element name="renderings" type="tRenderings"
								minOccurs="0" />
						</xsd:sequence>
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tNotificationInterface">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleElements">
						<xsd:attribute name="portType" type="xsd:QName" use="required" />
						<xsd:attribute name="operation" type="xsd:NCName"
							use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<!-- miscellaneous helper types -->
			<xsd:complexType name="tText" mixed="true">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:attribute ref="xml:lang" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tDescription" mixed="true">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:attribute ref="xml:lang" />
						<xsd:attribute name="contentType" type="xsd:string" />
						<!-- any MIME type is allowed as value of contentType -->
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tFrom" mixed="true">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:sequence>
							<xsd:choice>
								<xsd:element name="argument" type="tArgument"
									minOccurs="0" />
								<xsd:element name="literal" type="tLiteral"
									minOccurs="0" />
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
						<xsd:attribute name="logicalPeopleGroup" type="xsd:QName" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tArgument">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:attribute name="name" type="xsd:NCName" />
						<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tParameter" mixed="true">
				<xsd:complexContent>
					<xsd:extension base="tExtensibleMixedContentElements">
						<xsd:attribute name="name" type="xsd:NCName" use="required" />
						<xsd:attribute name="type" type="xsd:QName" use="required" />
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tLiteral" mixed="true">
				<xsd:sequence>
					<xsd:any namespace="##any" processContents="lax" minOccurs="0"
						maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:anyAttribute namespace="##other"
					processContents="lax" />
			</xsd:complexType>
			<xsd:complexType name="tQuery" mixed="true">
				<xsd:sequence>
					<xsd:any namespace="##other" processContents="lax"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:attribute name="part" />
				<xsd:attribute name="queryLanguage" type="xsd:anyURI" />
				<xsd:anyAttribute namespace="##other"
					processContents="lax" />
			</xsd:complexType>
			<xsd:complexType name="tExpression" mixed="true">
				<xsd:sequence>
					<xsd:any namespace="##other" processContents="lax"
						minOccurs="0" maxOccurs="unbounded" />
				</xsd:sequence>
				<xsd:attribute name="expressionLanguage" type="xsd:anyURI" />
				<xsd:anyAttribute namespace="##other"
					processContents="lax" />
			</xsd:complexType>
			<xsd:complexType name="tPriority" mixed="true">
				<xsd:complexContent mixed="true">
					<xsd:extension base="tExpression" />
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tBoolean-expr" mixed="true">
				<xsd:complexContent mixed="true">
					<xsd:extension base="tExpression" />
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tDuration-expr" mixed="true">
				<xsd:complexContent mixed="true">
					<xsd:extension base="tExpression" />
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:complexType name="tDeadline-expr" mixed="true">
				<xsd:complexContent mixed="true">
					<xsd:extension base="tExpression" />
				</xsd:complexContent>
			</xsd:complexType>
			<xsd:simpleType name="tBoolean">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="yes" />
					<xsd:enumeration value="no" />
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:schema>

<xsd:schema xmlns="http://www.intalio.com/WS-HT/api"
xmlns:htd="http://www.intalio.com/WS-HT"
xmlns:xsd="http://www.w3.org/2001/XMLSchema"
targetNamespace="http://www.intalio.com/WS-HT/api"
elementFormDefault="qualified" blockDefault="#all">

		<!-- data types for attachment operations -->
		<xsd:element name="attachmentInfo" type="tAttachmentInfo" />
		<xsd:complexType name="tAttachmentInfo">
			<xsd:sequence>
				<xsd:element name="name" type="xsd:string" />
				<xsd:element name="accessType" type="xsd:string" />
				<xsd:element name="contentType" type="xsd:string" />
				<xsd:element name="attachedAt" type="xsd:dateTime" />
				<xsd:element name="attachedBy" type="htd:tUser" />
				<xsd:any namespace="##other" processContents="lax"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
		<xsd:element name="attachment" type="tAttachment" />
		<xsd:complexType name="tAttachment">
			<xsd:sequence>
				<xsd:element ref="attachmentInfo" />
				<xsd:element name="value" type="xsd:anyType" />
			</xsd:sequence>
		</xsd:complexType>
		<!-- data types for comments -->
		<xsd:element name="comment" type="tComment" />
		<xsd:complexType name="tComment">
			<xsd:sequence>
				<xsd:element name="addedAt" type="xsd:dateTime" />
				<xsd:element name="addedBy" type="htd:tUser" />
				<xsd:element name="text" type="xsd:string" />
				<xsd:any namespace="##other" processContents="lax"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
		<!-- data types for simple query operations -->
		<xsd:element name="taskAbstract" type="tTaskAbstract" />
		<xsd:complexType name="tTaskAbstract">
			<xsd:sequence>
				<xsd:element name="id" type="xsd:string" />
				<xsd:element name="taskType" type="xsd:string" />
				<xsd:element name="name" type="xsd:QName" />
				<xsd:element name="status" type="tStatus" />
				<xsd:element name="priority" type="xsd:nonNegativeInteger"
					minOccurs="0" />
				<xsd:element name="createdOn" type="xsd:dateTime" />
				<xsd:element name="activationTime" type="xsd:dateTime"
					minOccurs="0" />
				<xsd:element name="expirationTime" type="xsd:dateTime"
					minOccurs="0" />
				<xsd:element name="isSkipable" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasPotentialOwners" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="startByExists" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="completeByExists" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="presentationName" type="tPresentationName"
					minOccurs="0" />
				<xsd:element name="presentationSubject" type="tPresentationSubject"
					minOccurs="0" />
				<xsd:element name="renderingMethodExists" type="xsd:boolean" />
				<xsd:element name="hasOutput" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasFault" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasAttachments" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasComments" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="escalated" type="xsd:boolean"
					minOccurs="0" />
				<xsd:any namespace="##other" processContents="lax"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
		<xsd:element name="task" type="tTask" />
		<xsd:complexType name="tTask">
			<xsd:sequence>
				<xsd:element name="id" type="xsd:string" />
				<xsd:element name="taskType" type="xsd:string" />
				<xsd:element name="name" type="xsd:QName" />
				<xsd:element name="status" type="tStatus" />
				<xsd:element name="priority" type="xsd:nonNegativeInteger"
					minOccurs="0" />
				<xsd:element name="taskInitiator" type="htd:tUser"
					minOccurs="0" />
				<xsd:element name="taskStakeholders" type="htd:tOrganizationalEntity"
					minOccurs="0" />
				<xsd:element name="potentialOwners" type="htd:tOrganizationalEntity"
					minOccurs="0" />
				<xsd:element name="businessAdministrators" type="htd:tOrganizationalEntity"
					minOccurs="0" />
				<xsd:element name="actualOwner" type="htd:tUser"
					minOccurs="0" />
				<xsd:element name="notificationRecipients" type="htd:tOrganizationalEntity"
					minOccurs="0" />
				<xsd:element name="createdOn" type="xsd:dateTime" />
				<xsd:element name="createdBy" type="xsd:string"
					minOccurs="0" />
				<xsd:element name="activationTime" type="xsd:dateTime"
					minOccurs="0" />
				<xsd:element name="expirationTime" type="xsd:dateTime"
					minOccurs="0" />
				<xsd:element name="isSkipable" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasPotentialOwners" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="startByExists" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="completeByExists" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="presentationName" type="tPresentationName"
					minOccurs="0" />
				<xsd:element name="presentationSubject" type="tPresentationSubject"
					minOccurs="0" />
				<xsd:element name="renderingMethodExists" type="xsd:boolean" />
				<xsd:element name="hasOutput" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasFault" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasAttachments" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="hasComments" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="escalated" type="xsd:boolean"
					minOccurs="0" />
				<xsd:element name="primarySearchBy" type="xsd:string"
					minOccurs="0" />
				<xsd:any namespace="##other" processContents="lax"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
		<xsd:simpleType name="tPresentationName">
			<xsd:annotation>
				<xsd:documentation>length-restricted string
			</xsd:documentation>
			</xsd:annotation>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="64" />
				<xsd:whiteSpace value="preserve" />
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:simpleType name="tPresentationSubject">
			<xsd:annotation>
				<xsd:documentation>length-restricted string
			</xsd:documentation>
			</xsd:annotation>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="254" />
				<xsd:whiteSpace value="preserve" />
			</xsd:restriction>
		</xsd:simpleType>
		<xsd:simpleType name="tStatus">
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="CREATED" />
				<xsd:enumeration value="READY" />
				<xsd:enumeration value="RESERVED" />
				<xsd:enumeration value="IN_PROGRESS" />
				<xsd:enumeration value="SUSPENDED" />
				<xsd:enumeration value="COMPLETED" />
				<xsd:enumeration value="FAILED" />
				<xsd:enumeration value="ERROR" />
				<xsd:enumeration value="EXITED" />
				<xsd:enumeration value="OBSOLETE" />
			</xsd:restriction>
		</xsd:simpleType>
		<!-- data types for advanced query operations -->
		<xsd:element name="taskQueryResultSet" type="tTaskQueryResultSet" />
		<xsd:complexType name="tTaskQueryResultSet">
			<xsd:sequence>
				<xsd:element name="row" type="tTaskQueryResultRow"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
		<xsd:complexType name="tTaskQueryResultRow">
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element name="id" type="xsd:string" />
				<xsd:element name="taskType" type="xsd:string" />
				<xsd:element name="name" type="xsd:QName" />
				<xsd:element name="status" type="tStatus" />
				<xsd:element name="priority" type="xsd:nonNegativeInteger" />
				<xsd:element name="taskInitiator" type="htd:tOrganizationalEntity" />
				<xsd:element name="taskStakeholders" type="htd:tOrganizationalEntity" />
				<xsd:element name="potentialOwners" type="htd:tOrganizationalEntity" />
				<xsd:element name="businessAdministrators" type="htd:tOrganizationalEntity" />
				<xsd:element name="actualOwner" type="htd:tUser" />
				<xsd:element name="notificationRecipients" type="htd:tOrganizationalEntity" />
				<xsd:element name="createdOn" type="xsd:dateTime" />
				<xsd:element name="createdBy" type="xsd:string" />
				<xsd:element name="activationTime" type="xsd:dateTime" />
				<xsd:element name="expirationTime" type="xsd:dateTime" />
				<xsd:element name="isSkipable" type="xsd:boolean" />
				<xsd:element name="hasPotentialOwners" type="xsd:boolean" />
				<xsd:element name="startByExists" type="xsd:boolean" />
				<xsd:element name="completeByExists" type="xsd:boolean" />
				<xsd:element name="presentationName" type="tPresentationName" />
				<xsd:element name="presentationSubject" type="tPresentationSubject" />
				<xsd:element name="presentationDescription" type="xsd:string" />
				<xsd:element name="renderingMethodExists" type="xsd:boolean" />
				<xsd:element name="hasOutput" type="xsd:boolean" />
				<xsd:element name="hasFault" type="xsd:boolean" />
				<xsd:element name="hasAttachments" type="xsd:boolean" />
				<xsd:element name="hasComments" type="xsd:boolean" />
				<xsd:element name="escalated" type="xsd:boolean" />
				<xsd:element name="primarySearchBy" type="xsd:string" />
				<xsd:any namespace="##other" processContents="lax" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:schema>
		<xsd:schema xmlns="http://www.intalio.com/WS-HT/api/xsd"
			xmlns:htd="http://www.intalio.com/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.intalio.com/WS-HT/api/xsd" xmlns:api="http://www.intalio.com/WS-HT/api"
			elementFormDefault="qualified" blockDefault="#all">
			<!--
				<xsd:import namespace="http://www.example.org/WS-HT/api"
				schemaLocation="ws-humantask-api.xsd" /> <xsd:import
				namespace="http://www.example.org/WS-HT"
				schemaLocation="ws-humantask.xsd" />
			-->
			<xsd:element name="claim">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="claimResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="start">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="startResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="stop">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="stopResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="release">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="releaseResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="suspend">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="suspendResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="suspendUntil">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="time" type="tTime" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:complexType name="tTime">
				<xsd:choice>
					<xsd:element name="timePeriod" type="xsd:duration" />
					<xsd:element name="pointOfTime" type="xsd:dateTime" />
				</xsd:choice>
			</xsd:complexType>
			<xsd:element name="suspendUntilResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="resume">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="resumeResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="complete">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="taskData" type="xsd:anyType"
							minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="completeResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="remove">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="removeResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="fail">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="faultName" type="xsd:NCName"
							minOccurs="0" />
						<xsd:element name="faultData" type="xsd:anyType"
							minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="failResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setPriority">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="priority" type="xsd:nonNegativeInteger" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setPriorityResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="addAttachment">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="name" type="xsd:string" />
						<xsd:element name="accessType" type="xsd:string" />
						<xsd:element name="attachment" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="addAttachmentResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getAttachmentInfos">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getAttachmentInfosResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="info" type="api:tAttachmentInfo"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getAttachments">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="attachmentName" type="xsd:string" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getAttachmentsResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="attachment" type="api:tAttachment"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteAttachments">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="attachmentName" type="xsd:string" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteAttachmentsResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="addComment">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="text" type="xsd:string" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="addCommentResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getComments">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getCommentsResposne">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="comment" type="api:tComment"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="skip">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="skipResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="forward">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="forwardResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="delegate">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="delegateResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRendering">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyType" />
						<xsd:element name="renderingType" type="xsd:QName" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRenderingResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="rendering" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRenderingTypes">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getRenderingTypesResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="renderingType" type="xsd:QName"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getTaskInfo">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getTaskInfoResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="task" type="api:tTask" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getTaskDescription">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="contentType" type="xsd:string"
							minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getTaskDescriptionResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="description" type="xsd:string" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setOutput">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="part" type="xsd:NCName" minOccurs="0" />
						<xsd:element name="taskData" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setOutputResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteOutput">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteOutputResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setFault">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="faultName" type="xsd:NCName" />
						<xsd:element name="faultData" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setFaultResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteFault">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="deleteFaultResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getInput">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="part" type="xsd:NCName" minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getInputResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskData" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getOutput">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="part" type="xsd:NCName" minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getOutputResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskData" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getFault">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="faultName" type="xsd:NCName" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getFaultResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="faultName" type="xsd:NCName" />
						<xsd:element name="faultData" type="xsd:anyType" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getMyTaskAbstracts">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskType" type="xsd:string" />
						<xsd:element name="genericHumanRole" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="workQueue" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="status" type="api:tStatus"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="whereClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="createdOnClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="maxTasks" type="xsd:int" minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getMyTaskAbstractsResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskAbstract" type="api:tTaskAbstract"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getMyTasks">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskType" type="xsd:string" />
						<xsd:element name="genericHumanRole" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="workQueue" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="status" type="api:tStatus"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="whereClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="createdOnClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="maxTasks" type="xsd:int" minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="getMyTasksResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="taskAbstract" type="api:tTask"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="query">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="selectClause" type="xsd:string" />
						<xsd:element name="whereClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="orderByClause" type="xsd:string"
							minOccurs="0" />
						<xsd:element name="maxTasks" type="xsd:int" minOccurs="0" />
						<xsd:element name="taskIndexOffset" type="xsd:int"
							minOccurs="0" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="queryResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="query" type="api:tTaskQueryResultSet" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="activate">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="activateResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="nominate">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="nominateResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setGenericHumanRole">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="identifier" type="xsd:anyURI" />
						<xsd:element name="genericHumanRole" type="xsd:string" />
						<xsd:element name="organizationalEntity" type="htd:tOrganizationalEntity" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="setGenericHumanRoleResponse">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:annotation>
							<xsd:documentation>Empty message</xsd:documentation>
						</xsd:annotation>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="illegalState">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="status" type="api:tStatus" />
						<xsd:element name="message" type="xsd:string" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="illegalArgument" type="xsd:string" />
			<xsd:element name="illegalAccess" type="xsd:string" />
			<xsd:element name="illegalOperation" type="xsd:string" />
			<xsd:element name="recipientNotAllowed" type="xsd:string" />
		</xsd:schema>

		<!--  modified by jackie -->
	</wsdl:types>
	<!-- Declaration of messages -->
	<wsdl:message name="claim">
		<wsdl:part name="claim" element="htdt:claim" />
	</wsdl:message>
	<wsdl:message name="claimResponse">
		<wsdl:part name="claimResponse" element="htdt:claimResponse" />
	</wsdl:message>
	<wsdl:message name="start">
		<wsdl:part name="start" element="htdt:start" />
	</wsdl:message>
	<wsdl:message name="startResponse">
		<wsdl:part name="startResponse" element="htdt:startResponse" />
	</wsdl:message>
	<wsdl:message name="stop">
		<wsdl:part name="stop" element="htdt:stop" />
	</wsdl:message>
	<wsdl:message name="stopResponse">
		<wsdl:part name="stopResponse" element="htdt:stopResponse" />
	</wsdl:message>
	<wsdl:message name="release">
		<wsdl:part name="release" element="htdt:release" />
	</wsdl:message>
	<wsdl:message name="releaseResponse">
		<wsdl:part name="releaseResponse" element="htdt:releaseResponse" />
	</wsdl:message>
	<wsdl:message name="suspend">
		<wsdl:part name="suspend" element="htdt:suspend" />
	</wsdl:message>
	<wsdl:message name="suspendResponse">
		<wsdl:part name="suspendResponse" element="htdt:suspendResponse" />
	</wsdl:message>
	<wsdl:message name="suspendUntil">
		<wsdl:part name="suspendUntil" element="htdt:suspendUntil" />
	</wsdl:message>
	<wsdl:message name="suspendUntilResponse">
		<wsdl:part name="suspendUntilResponse" element="htdt:suspendUntilResponse" />
	</wsdl:message>
	<wsdl:message name="resume">
		<wsdl:part name="resume" element="htdt:resume" />
	</wsdl:message>
	<wsdl:message name="resumeResponse">
		<wsdl:part name="resumeResponse" element="htdt:resumeResponse" />
	</wsdl:message>
	<wsdl:message name="complete">
		<wsdl:part name="complete" element="htdt:complete" />
	</wsdl:message>
	<wsdl:message name="completeResponse">
		<wsdl:part name="completeResponse" element="htdt:completeResponse" />
	</wsdl:message>
	<wsdl:message name="remove">
		<wsdl:part name="remove" element="htdt:remove" />
	</wsdl:message>
	<wsdl:message name="removeResponse">
		<wsdl:part name="removeResponse" element="htdt:removeResponse" />
	</wsdl:message>
	<wsdl:message name="fail">
		<wsdl:part name="fail" element="htdt:fail" />
	</wsdl:message>
	<wsdl:message name="failResponse">
		<wsdl:part name="failResponse" element="htdt:failResponse" />
	</wsdl:message>
	<wsdl:message name="setPriority">
		<wsdl:part name="setPriority" element="htdt:setPriority" />
	</wsdl:message>
	<wsdl:message name="setPriorityResponse">
		<wsdl:part name="setPriorityResponse" element="htdt:setPriorityResponse" />
	</wsdl:message>
	<wsdl:message name="addAttachment">
		<wsdl:part name="addAttachment" element="htdt:addAttachment" />
	</wsdl:message>
	<wsdl:message name="addAttachmentResponse">
		<wsdl:part name="addAttachmentResponse" element="htdt:addAttachmentResponse" />
	</wsdl:message>
	<wsdl:message name="getAttachmentInfos">
		<wsdl:part name="getAttachmentInfos" element="htdt:getAttachmentInfos" />
	</wsdl:message>
	<wsdl:message name="getAttachmentInfosResponse">
		<wsdl:part name="getAttachmentInfosResponse" element="htdt:getAttachmentInfosResponse" />
	</wsdl:message>
	<wsdl:message name="getAttachments">
		<wsdl:part name="getAttachments" element="htdt:getAttachments" />
	</wsdl:message>
	<wsdl:message name="getAttachmentsResponse">
		<wsdl:part name="getAttachmentsResponse" element="htdt:getAttachmentsResponse" />
	</wsdl:message>
	<wsdl:message name="deleteAttachments">
		<wsdl:part name="deleteAttachments" element="htdt:deleteAttachments" />
	</wsdl:message>
	<wsdl:message name="deleteAttachmentsResponse">
		<wsdl:part name="deleteAttachmentsResponse" element="htdt:deleteAttachmentsResponse" />
	</wsdl:message>
	<wsdl:message name="addComment">
		<wsdl:part name="addComment" element="htdt:addComment" />
	</wsdl:message>
	<wsdl:message name="addCommentResponse">
		<wsdl:part name="addCommentResponse" element="htdt:addCommentResponse" />
	</wsdl:message>
	<wsdl:message name="getComments">
		<wsdl:part name="getComments" element="htdt:getComments" />
	</wsdl:message>
	<wsdl:message name="getCommentsResponse">
		<wsdl:part name="getCommentsResponse" element="htdt:getCommentsResposne" />
	</wsdl:message>
	<wsdl:message name="skip">
		<wsdl:part name="skip" element="htdt:skip" />
	</wsdl:message>
	<wsdl:message name="skipResponse">
		<wsdl:part name="skipResponse" element="htdt:skipResponse" />
	</wsdl:message>
	<wsdl:message name="forward">
		<wsdl:part name="forward" element="htdt:forward" />
	</wsdl:message>
	<wsdl:message name="forwardResponse">
		<wsdl:part name="forwardResponse" element="htdt:forwardResponse" />
	</wsdl:message>
	<wsdl:message name="delegate">
		<wsdl:part name="delegate" element="htdt:delegate" />
	</wsdl:message>
	<wsdl:message name="delegateResponse">
		<wsdl:part name="delegateResponse" element="htdt:delegateResponse" />
	</wsdl:message>
	<wsdl:message name="getRendering">
		<wsdl:part name="getRendering" element="htdt:getRendering" />
	</wsdl:message>
	<wsdl:message name="getRenderingResponse">
		<wsdl:part name="getRenderingResponse" element="htdt:getRenderingResponse" />
	</wsdl:message>
	<wsdl:message name="getRenderingTypes">
		<wsdl:part name="getRenderingTypes" element="htdt:getRenderingTypes" />
	</wsdl:message>
	<wsdl:message name="getRenderingTypesResponse">
		<wsdl:part name="getRenderingTypesResponse" element="htdt:getRenderingTypesResponse" />
	</wsdl:message>
	<wsdl:message name="getTaskInfo">
		<wsdl:part name="getTaskInfo" element="htdt:getTaskInfo" />
	</wsdl:message>
	<wsdl:message name="getTaskInfoResponse">
		<wsdl:part name="getTaskInfoResponse" element="htdt:getTaskInfoResponse" />
	</wsdl:message>
	<wsdl:message name="getTaskDescription">
		<wsdl:part name="getTaskDescription" element="htdt:getTaskDescription" />
	</wsdl:message>
	<wsdl:message name="getTaskDescriptionResponse">
		<wsdl:part name="getTaskDescriptionResponse" element="htdt:getTaskDescriptionResponse" />
	</wsdl:message>
	<wsdl:message name="setOutput">
		<wsdl:part name="setOutput" element="htdt:setOutput" />
	</wsdl:message>
	<wsdl:message name="setOutputResponse">
		<wsdl:part name="setOutputResponse" element="htdt:setOutputResponse" />
	</wsdl:message>
	<wsdl:message name="deleteOutput">
		<wsdl:part name="deleteOutput" element="htdt:deleteOutput" />
	</wsdl:message>
	<wsdl:message name="deleteOutputResponse">
		<wsdl:part name="deleteOutputResponse" element="htdt:deleteOutputResponse" />
	</wsdl:message>
	<wsdl:message name="setFault">
		<wsdl:part name="setFault" element="htdt:setFault" />
	</wsdl:message>
	<wsdl:message name="setFaultResponse">
		<wsdl:part name="setFaultResponse" element="htdt:setFaultResponse" />
	</wsdl:message>
	<wsdl:message name="deleteFault">
		<wsdl:part name="deleteFault" element="htdt:deleteFault" />
	</wsdl:message>
	<wsdl:message name="deleteFaultResponse">
		<wsdl:part name="deleteFaultResponse" element="htdt:deleteFaultResponse" />
	</wsdl:message>
	<wsdl:message name="getInput">
		<wsdl:part name="getInput" element="htdt:getInput" />
	</wsdl:message>
	<wsdl:message name="getInputResponse">
		<wsdl:part name="getInputResponse" element="htdt:getInputResponse" />
	</wsdl:message>
	<wsdl:message name="getOutput">
		<wsdl:part name="getOutput" element="htdt:getOutput" />
	</wsdl:message>
	<wsdl:message name="getOutputResponse">
		<wsdl:part name="getOutputResponse" element="htdt:getOutputResponse" />
	</wsdl:message>
	<wsdl:message name="getFault">
		<wsdl:part name="getFault" element="htdt:getFault" />
	</wsdl:message>
	<wsdl:message name="getFaultResponse">
		<wsdl:part name="getFaultResponse" element="htdt:getFaultResponse" />
	</wsdl:message>
	<wsdl:message name="getMyTaskAbstracts">
		<wsdl:part name="getMyTaskAbstracts" element="htdt:getMyTaskAbstracts" />
	</wsdl:message>
	<wsdl:message name="getMyTaskAbstractsResponse">
		<wsdl:part name="getMyTaskAbstractsResponse" element="htdt:getMyTaskAbstractsResponse" />
	</wsdl:message>
	<wsdl:message name="getMyTasks">
		<wsdl:part name="getMyTasks" element="htdt:getMyTasks" />
	</wsdl:message>
	<wsdl:message name="getMyTasksResponse">
		<wsdl:part name="getMyTasksResponse" element="htdt:getMyTasksResponse" />
	</wsdl:message>
	<wsdl:message name="query">
		<wsdl:part name="query" element="htdt:query" />
	</wsdl:message>
	<wsdl:message name="queryResponse">
		<wsdl:part name="queryResponse" element="htdt:queryResponse" />
	</wsdl:message>
	<wsdl:message name="activate">
		<wsdl:part name="activate" element="htdt:activate" />
	</wsdl:message>
	<wsdl:message name="activateResponse">
		<wsdl:part name="activateResponse" element="htdt:activateResponse" />
	</wsdl:message>
	<wsdl:message name="nominate">
		<wsdl:part name="nominate" element="htdt:nominate" />
	</wsdl:message>
	<wsdl:message name="nominateResponse">
		<wsdl:part name="nominateResponse" element="htdt:nominateResponse" />
	</wsdl:message>
	<wsdl:message name="setGenericHumanRole">
		<wsdl:part name="setGenericHumanRole" element="htdt:setGenericHumanRole" />
	</wsdl:message>
	<wsdl:message name="setGenericHumanRoleResponse">
		<wsdl:part name="setGenericHumanRoleResponse" element="htdt:setGenericHumanRoleResponse" />
	</wsdl:message>
	<!-- Declaration of fault messages -->
	<wsdl:message name="illegalStateFault">
		<wsdl:part name="illegalState" element="htdt:illegalState" />
	</wsdl:message>
	<wsdl:message name="illegalArgumentFault">
		<wsdl:part name="illegalArgument" element="htdt:illegalArgument" />
	</wsdl:message>
	<wsdl:message name="illegalAccessFault">
		<wsdl:part name="illegalAccess" element="htdt:illegalAccess" />
	</wsdl:message>
	<wsdl:message name="illegalOperationFault">
		<wsdl:part name="illegalOperation" element="htdt:illegalOperation" />
	</wsdl:message>
	<wsdl:message name="recipientNotAllowed">
		<wsdl:part name="recipientNotAllowed" element="htdt:recipientNotAllowed" />
	</wsdl:message>
	<!-- Port type definition -->
	<wsdl:portType name="taskOperations">
		<wsdl:operation name="claim">
			<wsdl:input message="claim" />
			<wsdl:output message="claimResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="start">
			<wsdl:input message="start" />
			<wsdl:output message="startResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="stop">
			<wsdl:input message="stop" />
			<wsdl:output message="stopResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="release">
			<wsdl:input message="release" />
			<wsdl:output message="releaseResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="suspend">
			<wsdl:input message="suspend" />
			<wsdl:output message="suspendResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="suspendUntil">
			<wsdl:input message="suspendUntil" />
			<wsdl:output message="suspendUntilResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="resume">
			<wsdl:input message="resume" />
			<wsdl:output message="resumeResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="complete">
			<wsdl:input message="complete" />
			<wsdl:output message="completeResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="remove">
			<wsdl:input message="remove" />
			<wsdl:output message="removeResponse" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="fail">
			<wsdl:input message="fail" />
			<wsdl:output message="failResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
			<wsdl:fault name="illegalOperationFault" message="illegalOperationFault" />
		</wsdl:operation>
		<wsdl:operation name="setPriority">
			<wsdl:input message="setPriority" />
			<wsdl:output message="setPriorityResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="addAttachment">
			<wsdl:input message="addAttachment" />
			<wsdl:output message="addAttachmentResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getAttachmentInfos">
			<wsdl:input message="getAttachmentInfos" />
			<wsdl:output message="getAttachmentInfosResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getAttachments">
			<wsdl:input message="getAttachments" />
			<wsdl:output message="getAttachmentsResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="deleteAttachments">
			<wsdl:input message="deleteAttachments" />
			<wsdl:output message="deleteAttachmentsResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="addComment">
			<wsdl:input message="addComment" />
			<wsdl:output message="addCommentResposne" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getComments">
			<wsdl:input message="getComments" />
			<wsdl:output message="getCommentsResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="skip">
			<wsdl:input message="skip" />
			<wsdl:output message="skipResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
			<wsdl:fault name="illegalOperationFault" message="illegalOperationFault" />
		</wsdl:operation>
		<wsdl:operation name="forward">
			<wsdl:input message="forward" />
			<wsdl:output message="forwardResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="delegate">
			<wsdl:input message="delegate" />
			<wsdl:output message="delegateResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
			<wsdl:fault name="recipientNotAllowed" message="recipientNotAllowed" />
		</wsdl:operation>
		<wsdl:operation name="getRendering">
			<wsdl:input message="getRendering" />
			<wsdl:output message="getRenderingResponse" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="getRenderingTypes">
			<wsdl:input message="getRenderingTypes" />
			<wsdl:output message="getRenderingTypesResponse" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="getTaskInfo">
			<wsdl:input message="getTaskInfo" />
			<wsdl:output message="getTaskInfoResponse" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="getTaskDescription">
			<wsdl:input message="getTaskDescription" />
			<wsdl:output message="getTaskDescriptionResponse" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="setOutput">
			<wsdl:input message="setOutput" />
			<wsdl:output message="setOutputResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="deleteOutput">
			<wsdl:input message="deleteOutput" />
			<wsdl:output message="deleteOutputResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="setFault">
			<wsdl:input message="setFault" />
			<wsdl:output message="setFaultResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
			<wsdl:fault name="illegalOperationFault" message="illegalOperationFault" />
		</wsdl:operation>
		<wsdl:operation name="deleteFault">
			<wsdl:input message="deleteFault" />
			<wsdl:output message="deleteFaultResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getInput">
			<wsdl:input message="getInput" />
			<wsdl:output message="getInputResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getOutput">
			<wsdl:input message="getOutput" />
			<wsdl:output message="getOutputResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="getFault">
			<wsdl:input message="getFault" />
			<wsdl:output message="getFaultResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
			<wsdl:fault name="illegalOperationFault" message="illegalOperationFault" />
		</wsdl:operation>
		<wsdl:operation name="getMyTaskAbstracts">
			<wsdl:input message="getMyTaskAbstracts" />
			<wsdl:output message="getMyTaskAbstractsResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="getMyTasks">
			<wsdl:input message="getMyTasks" />
			<wsdl:output message="getMyTasksResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="query">
			<wsdl:input message="query" />
			<wsdl:output message="queryResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
		</wsdl:operation>
		<wsdl:operation name="activate">
			<wsdl:input message="activate" />
			<wsdl:output message="activateResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="nominate">
			<wsdl:input message="nominate" />
			<wsdl:output message="nominateResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
		<wsdl:operation name="setGenericHumanRole">
			<wsdl:input message="setGenericHumanRole" />
			<wsdl:output message="setGenericHumanRoleResponse" />
			<wsdl:fault name="illegalStateFault" message="illegalStateFault" />
			<wsdl:fault name="illegalArgumentFault" message="illegalArgumentFault" />
			<wsdl:fault name="illegalAccessFault" message="illegalAccessFault" />
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:binding name="HumanTaskOperationServicesSOAP" type="tns:taskOperations">
		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="getMyTasks">
			<soap:operation
				soapAction="http://www.intalio.com/BPMS/Workflow/HumanTaskOperationServices-20081209/getMyTasks" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
			<wsdl:fault name="illegalStateFault">
				<soap:fault name="illegalStateFault" use="literal" />
			</wsdl:fault>
			<wsdl:fault name="illegalArgumentFault">
				<soap:fault name="illegalArgumentFault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>

	<wsdl:service name="HumanTaskOperationServices">
		<wsdl:port name="HumanTaskOperationServicesSOAP" binding="tns:HumanTaskOperationServicesSOAP">
            <soap:address location="http://localhost:8080/axis2/services/HumanTaskOperationServices"/>
        </wsdl:port>
	</wsdl:service>
</wsdl:definitions>