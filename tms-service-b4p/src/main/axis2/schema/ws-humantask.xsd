<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.intalio.org/WS-HT" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.intalio.org/WS-HT" elementFormDefault="qualified"
    blockDefault="#all">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/2001/xml.xsd"/>

    <!-- base types for extensible elements -->
    <xsd:complexType name="tExtensibleElements">
        <xsd:sequence>
            <xsd:element name="documentation" type="tDocumentation" minOccurs="0"
                maxOccurs="unbounded"/>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:complexType name="tDocumentation" mixed="true">
        <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute ref="xml:lang"/>
    </xsd:complexType>
    <xsd:complexType name="tExtensibleMixedContentElements" mixed="true">
        <xsd:sequence>
            <xsd:element name="documentation" type="tDocumentation" minOccurs="0"
                maxOccurs="unbounded"/>
            <xsd:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"
            />
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <!-- human task definition -->
    <xsd:element name="humanInteractions" type="tHumanInteractions"/>
    <xsd:complexType name="tHumanInteractions">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="extensions" type="tExtensions" minOccurs="0"/>
                    <xsd:element name="import" type="tImport" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element ref="logicalPeopleGroups" minOccurs="0"/>
                    <xsd:element ref="tasks" minOccurs="0"/>
                    <xsd:element ref="notifications" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
                <xsd:attribute name="queryLanguage" type="xsd:anyURI"/>
                <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tExtensions">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="extension" type="tExtension" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tExtension">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
                <xsd:attribute name="mustUnderstand" type="tBoolean" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="import" type="tImport"/>
    <xsd:complexType name="tImport">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:attribute name="namespace" type="xsd:anyURI" use="optional"/>
                <xsd:attribute name="location" type="xsd:anyURI" use="optional"/>
                <xsd:attribute name="importType" type="xsd:anyURI" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="logicalPeopleGroups" type="tLogicalPeopleGroups"/>
    <xsd:complexType name="tLogicalPeopleGroups">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="logicalPeopleGroup" type="tLogicalPeopleGroup"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tLogicalPeopleGroup">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="parameter" type="tParameter" minOccurs="0"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
                <xsd:attribute name="reference" type="xsd:QName" use="optional"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- generic human roles used in tasks and notifications -->
    <xsd:group name="genericHumanRole">
        <xsd:choice>
            <xsd:element ref="potentialOwners"/>
            <xsd:element ref="excludedOwners"/>
            <xsd:element ref="taskInitiator"/>
            <xsd:element ref="taskStakeholders"/>
            <xsd:element ref="businessAdministrators"/>
            <xsd:element ref="recipients"/>
        </xsd:choice>
    </xsd:group>
    <xsd:element name="potentialOwners" type="tGenericHumanRole"/>
    <xsd:element name="excludedOwners" type="tGenericHumanRole"/>
    <xsd:element name="taskInitiator" type="tGenericHumanRole"/>
    <xsd:element name="taskStakeholders" type="tGenericHumanRole"/>
    <xsd:element name="businessAdministrators" type="tGenericHumanRole"/>
    <xsd:element name="recipients" type="tGenericHumanRole"/>
    <xsd:complexType name="tGenericHumanRole">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="from" type="tFrom"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- elements and types for organizational entities -->
    <xsd:element name="organizationalEntity" type="tOrganizationalEntity"/>
    <xsd:complexType name="tOrganizationalEntity">
        <xsd:choice>
            <xsd:element ref="users"/>
            <xsd:element ref="groups"/>
        </xsd:choice>
    </xsd:complexType>
    <xsd:element name="user" type="tUser"/>
    <xsd:simpleType name="tUser">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:element name="users" type="tUserlist"/>
    <xsd:complexType name="tUserlist">
        <xsd:sequence>
            <xsd:element ref="user" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="group" type="tGroup"/>
    <xsd:simpleType name="tGroup">
        <xsd:restriction base="xsd:string"/>
    </xsd:simpleType>
    <xsd:element name="groups" type="tGrouplist"/>
    <xsd:complexType name="tGrouplist">
        <xsd:sequence>
            <xsd:element ref="group" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- human tasks -->
    <xsd:element name="tasks" type="tTasks"/>
    <xsd:complexType name="tTasks">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element ref="task" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="task" type="tTask"/>
    <xsd:complexType name="tTask">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="interface" type="tTaskInterface"/>
                    <xsd:element ref="priority" minOccurs="0"/>
                    <xsd:element ref="peopleAssignments"/>
                    <xsd:element name="delegation" type="tDelegation" minOccurs="0"/>
                    <xsd:element name="presentationElements" type="tPresentationElements"/>
                    <xsd:element name="outcome" type="tQuery" minOccurs="0"/>
                    <xsd:element name="searchBy" type="tExpression" minOccurs="0"/>
                    <xsd:element name="renderings" type="tRenderings" minOccurs="0"/>
                    <xsd:element name="deadlines" type="tDeadlines" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="priority" type="tPriority"/>
    <xsd:complexType name="tTaskInterface">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:attribute name="portType" type="xsd:QName" use="required"/>
                <xsd:attribute name="operation" type="xsd:NCName" use="required"/>
                <xsd:attribute name="responsePortType" type="xsd:QName" use="optional"/>
                <xsd:attribute name="responseOperation" type="xsd:NCName" use="optional"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- presentation elements -->
    <xsd:complexType name="tPresentationElements">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="name" type="tText" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="presentationParameters" type="tPresentationParameters"
                        minOccurs="0"/>
                    <xsd:element name="subject" type="tText" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:element name="description" type="tDescription" minOccurs="0"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tPresentationParameters">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="presentationParameter" type="tPresentationParameter"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
                <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tPresentationParameter">
        <xsd:complexContent>
            <xsd:extension base="tParameter"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tRenderings">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="rendering" type="tRendering" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <!-- elements for rendering tasks -->
    <xsd:complexType name="tRendering">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:attribute name="type" type="xsd:QName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- elements for people assignment -->
    <xsd:element name="peopleAssignments" type="tPeopleAssignments"/>
    <xsd:complexType name="tPeopleAssignments">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:group ref="genericHumanRole" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <!-- elements for handling timeouts and escalation -->
    <xsd:complexType name="tDeadlines">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="startDeadline" type="tDeadline" minOccurs="0"
                        maxOccurs="unbounded"/>
                    <xsd:element name="completionDeadline" type="tDeadline" minOccurs="0"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tDeadline">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:choice>
                        <xsd:element name="for" type="tDuration-expr"/>
                        <xsd:element name="until" type="tDeadline-expr"/>
                    </xsd:choice>
                    <xsd:element name="escalation" type="tEscalation" minOccurs="0"
                        maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tEscalation">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="condition" type="tBoolean-expr" minOccurs="0"/>
                    <xsd:element name="toParts" type="tToParts" minOccurs="0" maxOccurs="unbounded"/>
                    <xsd:choice>
                        <xsd:element ref="notification"/>
                        <xsd:element name="localNotification" type="tLocalNotification"/>
                        <xsd:element name="reassignment" type="tReassignment"/>
                    </xsd:choice>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tLocalNotification">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:choice>
                    <xsd:sequence>
                        <xsd:element ref="priority" minOccurs="0"/>
                        <xsd:element ref="peopleAssignments" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:choice>
                <xsd:attribute name="reference" type="xsd:QName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tReassignment">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element ref="potentialOwners"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tToParts">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="toPart" type="tToPart" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tToPart" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
                <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- task delegation -->
    <xsd:complexType name="tDelegation">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="from" type="tFrom" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="potentialDelegatees" type="tPotentialDelegatees" use="required"
                />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:simpleType name="tPotentialDelegatees">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="anybody"/>
            <xsd:enumeration value="nobody"/>
            <xsd:enumeration value="potentialOwners"/>
            <xsd:enumeration value="other"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- notifications -->
    <xsd:element name="notifications" type="tNotifications"/>
    <xsd:complexType name="tNotifications">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element ref="notification" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:element name="notification" type="tNotification"/>
    <xsd:complexType name="tNotification">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:sequence>
                    <xsd:element name="interface" type="tNotificationInterface"/>
                    <xsd:element ref="priority" minOccurs="0"/>
                    <xsd:element ref="peopleAssignments"/>
                    <xsd:element name="presentationElements" type="tPresentationElements"/>
                    <xsd:element name="renderings" type="tRenderings" minOccurs="0"/>
                </xsd:sequence>
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tNotificationInterface">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleElements">
                <xsd:attribute name="portType" type="xsd:QName" use="required"/>
                <xsd:attribute name="operation" type="xsd:NCName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- miscellaneous helper types -->
    <xsd:complexType name="tText" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:attribute ref="xml:lang"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tDescription" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:attribute ref="xml:lang"/>
                <xsd:attribute name="contentType" type="xsd:string"/>
                <!-- any MIME type is allowed as value of contentType -->
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tFrom" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:sequence>
                    <xsd:choice>
                        <xsd:element name="argument" type="tArgument" minOccurs="0"/>
                        <xsd:element name="literal" type="tLiteral" minOccurs="0"/>
                    </xsd:choice>
                </xsd:sequence>
                <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
                <xsd:attribute name="logicalPeopleGroup" type="xsd:QName"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tArgument">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:attribute name="name" type="xsd:NCName"/>
                <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tParameter" mixed="true">
        <xsd:complexContent>
            <xsd:extension base="tExtensibleMixedContentElements">
                <xsd:attribute name="name" type="xsd:NCName" use="required"/>
                <xsd:attribute name="type" type="xsd:QName" use="required"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tLiteral" mixed="true">
        <xsd:sequence>
            <xsd:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:complexType name="tQuery" mixed="true">
        <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="part"/>
        <xsd:attribute name="queryLanguage" type="xsd:anyURI"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:complexType name="tExpression" mixed="true">
        <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="expressionLanguage" type="xsd:anyURI"/>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>
    <xsd:complexType name="tPriority" mixed="true">
        <xsd:complexContent mixed="true">
            <xsd:extension base="tExpression"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tBoolean-expr" mixed="true">
        <xsd:complexContent mixed="true">
            <xsd:extension base="tExpression"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tDuration-expr" mixed="true">
        <xsd:complexContent mixed="true">
            <xsd:extension base="tExpression"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:complexType name="tDeadline-expr" mixed="true">
        <xsd:complexContent mixed="true">
            <xsd:extension base="tExpression"/>
        </xsd:complexContent>
    </xsd:complexType>
    <xsd:simpleType name="tBoolean">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="yes"/>
            <xsd:enumeration value="no"/>
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
