diff --git a/tms-common/src/main/java/org/intalio/tempo/workflow/task/PATask.java b/tms-common/src/main/java/org/intalio/tempo/workflow/task/PATask.java
index 0fc8ccc..362ef8d 100644
--- a/tms-common/src/main/java/org/intalio/tempo/workflow/task/PATask.java
+++ b/tms-common/src/main/java/org/intalio/tempo/workflow/task/PATask.java
@@ -17,6 +17,7 @@ package org.intalio.tempo.workflow.task;
 
 import java.net.URI;
 import java.net.URL;
+import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collection;
 import java.util.Collections;
@@ -36,9 +37,14 @@ import javax.persistence.OneToMany;
 import javax.persistence.QueryHint;
 import javax.persistence.Table;
 
+import org.apache.axiom.om.OMElement;
+import org.apache.axiom.om.impl.OMNamespaceImpl;
+import org.apache.axiom.om.impl.llom.util.AXIOMUtil;
 import org.apache.openjpa.persistence.Persistent;
 import org.apache.openjpa.persistence.PersistentMap;
 import org.apache.openjpa.persistence.jdbc.ContainerTable;
+import org.apache.xmlbeans.XmlException;
+import javax.xml.stream.XMLStreamException;
 import org.intalio.tempo.workflow.auth.UserRoles;
 import org.intalio.tempo.workflow.task.attachments.Attachment;
 import org.intalio.tempo.workflow.task.traits.IChainableTask;
@@ -55,6 +61,11 @@ import org.intalio.tempo.workflow.task.xml.XmlTooling;
 import org.intalio.tempo.workflow.util.RequiredArgumentException;
 import org.w3c.dom.Document;
 
+import com.intalio.gi.forms.tAmanagement.ArrivalDepartureType;
+import com.intalio.gi.forms.tAmanagement.FormModel;
+import com.intalio.gi.forms.tAmanagement.InspectionType;
+import com.intalio.gi.forms.tAmanagement.impl.FormModelImpl;
+
 /**
  * Activity task
  */
@@ -330,8 +341,54 @@ public class PATask extends Task implements ITaskWithState, IProcessBoundTask, I
     }
 
     public void setOutput(String output) {
-        _output = output;
-    }
+		_output = output;
+		System.out.println(output);
+		try {
+			OMElement om = AXIOMUtil.stringToOM(output);
+			om.setLocalName("xml-fragment");
+			om.setNamespace(new OMNamespaceImpl("", "k"));
+			FormModelImpl outputXML = (FormModelImpl) FormModel.Factory
+					.parse(om.getXMLStreamReaderWithoutCaching());
+			setMetadata(outputXML);
+		} catch (XmlException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		} catch (XMLStreamException e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+		}
+	}
+
+	private void setMetadata(FormModelImpl outputXML) {
+		if (outputXML.getArrivalDeparture() != null) {
+
+			ArrivalDepartureType arrival = outputXML.getArrivalDeparture();
+			if (arrival.xgetSTD() != null && arrival.getSTD() != null) {
+
+				_STD = outputXML.getArrivalDeparture().getSTD();
+			}
+			if (arrival.xgetATD() != null && arrival.getATD() != null) {
+
+				_ATD = outputXML.getArrivalDeparture().getATD();
+			}
+			if (arrival.xgetETD() != null && arrival.getETD() != null) {
+
+				_ETD = outputXML.getArrivalDeparture().getETD();
+			}
+		}
+		if (outputXML.getInspection() != null) {
+			 InspectionType inspection = outputXML.getInspection();
+			 com.intalio.gi.forms.tAmanagement.InspectionType.AssignedMechanics[] mechanics =inspection.getAssignedMechanicsArray();
+			_assignedMechanics = new ArrayList<org.intalio.tempo.workflow.task.AssignedMechanics>();
+			for (com.intalio.gi.forms.tAmanagement.InspectionType.AssignedMechanics mechanic : mechanics) {
+				org.intalio.tempo.workflow.task.AssignedMechanics newMechanic = new org.intalio.tempo.workflow.task.AssignedMechanics();
+				newMechanic.setMechanicID(mechanic.getAssignedMechanicID());
+				newMechanic.setName(mechanic.getAssignedMechanicName());
+				_assignedMechanics.add(newMechanic);
+			}
+		}
+
+	}
 
     public Integer getPriority() {
         return _priority;
